// * === Переменные === * \\
// В основном по дефолту используем const для обозначения переменных, которые не будут изменяться, для особенных, которые всё таки будут — используем let.

// Есть 7 скалярных типов данных (примитивов)
const num = 5; // цифры
const str = 'Hello world!'; // строка
let bool = true; // булево значение принимает либо true, либо false
let und; // undefined
const bigInt = 25002195224663795n; // целые большие числа > 2^53
const symbol = Symbol(); // уникальные неизменяемые данные

let donutHole = null; // специальный примитив

// Также есть структурные типы данных
const object = {}; // объект
const array = []; // массив (разновидность объекта)

// Функции в различном написании
const func1 = function () {}; // функции
const func2 = () => {}; // функции

// Специальные объекты
const regExp = new RegExp(); // регулярные выражения
const regExp2 = /D/g; // регулярные выражения в иной записи
const error = new Error(); // ошибки
const date = new Date(); // для работы с датами

// 2 коллекции
const map = new Map();
const set = new Set();

// Для определения типа данных есть унарный оператор typeof. Унарный значит, что он содержит один операнд. Возвращает строку с описанием определённого типа данных.
console.log(typeof bigInt);